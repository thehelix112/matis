// Copyright 2001, 2002 Commonwealth of Australia
// Authors: John Wharington, David Andrews, Peter Beckwith, Nicholas Hynes
// Defence Science Technology Organisation, Maritime Platforms Division
// CVS $RCSfile: DSILI_Return_DataUpdate.h,v $
// CVS $Date: 2002/07/24 08:16:49 $
// CVS $Revision: 1.5 $





#ifndef DSILI_RETURN_DATAUPDATE_H
#define DSILI_RETURN_DATAUPDATE_H

#include <RTI.hh>

// this should perform mappings via UniqueID mechanism, so one return
// value can be associated with multiple values so that retract() will work.

/**
 * DSILI_Return_DataUpdate: 
 */
class DSILI_Return_DataUpdate {
  public:
    DSILI_Return_DataUpdate() {
        val_erh.theSerialNumber = 0;
        val_erh.sendingFederate = 0;
        val_handle = 0;
        val_bool = false;
    };
    DSILI_Return_DataUpdate(const RTI::EventRetractionHandle & theerh) {
        val_erh.theSerialNumber = theerh.theSerialNumber;
        val_erh.sendingFederate = theerh.sendingFederate;
    }
    RTI::EventRetractionHandle val_erh;
    HandleType val_handle;
    bool val_bool;

    DSILI_Return_DataUpdate(HandleType thehandle) {

        val_handle = thehandle;
    }

    DSILI_Return_DataUpdate(bool thebool) {

        val_bool = thebool;
    }

    // TODO
    // + exception info
    // + return handles (if due to making a getBlahHandle call)
    // 
    // also TODO, proper internalising and grouping of erh's.
};

#endif
